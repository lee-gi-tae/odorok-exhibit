plugins {
	id 'java'
	id 'org.springframework.boot' version '3.5.0'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.odorok'
version = '0.0.1-SNAPSHOT'
def querydslVersion = "5.0.0"
def generated = file("build/generated/querydsl")

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	//querydsl 의존성
	implementation("com.querydsl:querydsl-jpa:5.0.0:jakarta")
	annotationProcessor "com.querydsl:querydsl-apt:5.0.0:jakarta"
	annotationProcessor "jakarta.annotation:jakarta.annotation-api"
	annotationProcessor "jakarta.persistence:jakarta.persistence-api:3.1.0"

	testImplementation ('org.springframework.boot:spring-boot-starter-test')
	testImplementation 'jakarta.persistence:jakarta.persistence-api'
	testImplementation 'org.springframework.security:spring-security-test'

	implementation platform('software.amazon.awssdk:bom:2.25.15')
	implementation 'software.amazon.awssdk:s3'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
	implementation 'io.jsonwebtoken:jjwt-api:0.12.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.12.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.12.5'

	implementation 'org.springframework.boot:spring-boot-starter-jdbc'

	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	// https://mvnrepository.com/artifact/com.google.code.gson/gson
	implementation("com.google.code.gson:gson:2.13.1")

	// https://mvnrepository.com/artifact/com.mysql/mysql-connector-j
	implementation("com.mysql:mysql-connector-j:9.3.0")

	testImplementation 'com.h2database:h2'

}

tasks.withType(JavaCompile).configureEach {
	options.annotationProcessorGeneratedSourcesDirectory = generated
}

//java source set 에 Querydsl Q Class 위치 추가
sourceSets {
	main {
		java {
			srcDirs += generated
		}
	}
}

clean {
	delete generated
}

tasks.named('test') {
	useJUnitPlatform()
}
